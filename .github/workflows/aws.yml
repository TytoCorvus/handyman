name: Deploy to Amazon EC2

on:
  push:
    branches: [ "master", "dev" ]

permissions:
  contents: read

jobs:
  teardown: 
    name: Tear down old EC2 instance
    runs-on: ubuntu-latest
    environment: production

    steps: 
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Tear down old EC2 instance
        run: |
          instance="$(aws ec2 describe-instances \
          --filters Name=tag:Name,Values=handyman \
          --query 'Reservations[*].Instances[*].[InstanceId]' \
          --output text | head )"
          if [[ -z $instance ]]; then echo "No instance to destroy" && exit 0; else echo "Terminating instance"; fi
          aws ec2 terminate-instances --instance-ids $instance

  deploy:
    name: Run new EC2 instance
    runs-on: ubuntu-latest
    environment: production
    needs: teardown

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Create EC2 instance
      run: |
        instance="aws ec2 run-instances \
        --image-id ami-03f65b8614a860c29 \
        --count 1 \
        --instance-type t2.micro \
        --key-name handyman-key \
        --iam-instance-profile Arn=${{ secrets.AWS_HANDYMAN_ROLE_ARN }},Name=${{ vars.AWS_HANDYMAN_ROLE_NAME }} \
        --security-group-ids sg-0e6ffd8993b87d2fe \
        --subnet-id subnet-82ebb3fb \
        --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=handyman}]' \
        --query 'Instances[*].[InstanceId]' \
        --output text \
        --user-data handyman\deploy\user_data.sh"
        aws ec2 associate-address --instance-id $instance --allocation-id ${{ secrets.AWS_HANDYMAN_ELASTIC_IP }}



        

